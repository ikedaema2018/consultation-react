{"version":3,"sources":["components/RegisterForm.js","components/AppHeader.js","components/App.js","serviceWorker.js","index.js"],"names":["RegisterInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","name","email","password","password_confirmation","gender","age","introduction","message","checkValue","bind","assertThisInitialized","sendData","event","type","target","val","value","_this$state","length","push","test","match","console","log","setState","alert","concat","react_default","a","createElement","className","RegisterForm_NameInput","RegisterForm_EmailInput","RegisterForm_PasswordInput","RegisterForm_PasswordConfirmationInput","RegisterForm_GenderInput","RegisterForm_AgeInput","RegisterForm_IntroductionInput","RegisterForm_SendButton","Component","NameInput","InputLabel_default","TextField_default","onChange","EmailInput","PasswordInput","PasswordConfirmationInput","GenderInput","RadioGroup_default","Radio_default","checked","IntroductionInput","FilledInput_default","multiline","AgeInput","SendButton","checkError","mes","key","Button_default","raised","color","onClick","disabled","propType","PropTypes","func","object","array","AppHeader","AppBar_default","position","Toolbar_default","Typography_default","variant","align","App","components_AppHeader","RegisterForm","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d168c7e.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/register-form.css'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FilledInput from '@material-ui/core/FilledInput';\n\n\nclass RegisterInput extends Component {\n\n  constructor(props) {\n  \tsuper(props)\n\n\t  this.state = {\n  \t\tdata: {name: '', email: '', password: '', password_confirmation: '', gender: '男', age: '', introduction: ''},\n      message: {name: [\"名前の入力は必須です\"], email: [\"メールアドレスの入力は必須です\"],\n\t\t\tpassword: [\"passwordの入力は必須です\"], password_confirmation: [\"１つ目と同じpasswordを入力してください\"], age: ['年齢を選択してください'], introduction: []},\n\t  }\n\t\tthis.checkValue = this.checkValue.bind(this)\n\t  this.sendData = this.sendData.bind(this)\n  }\n\n\n  checkValue(event) {\n  \tlet type = event.target.name\n\t  let val = event.target.value\n\n\t  var {data, message} = this.state\n\n\t  switch (type) {\n\t\t  case \"name\":\n\t\t  \tdata.name = val\n\t\t\t  message.name = []\n\n\t\t\t  if(val.length > 10) {\n\t\t\t\t  message.name.push(\"名前は10文字以内で入力してください\")\n\t\t\t  }\n\t\t\t  if(val.length === 0) {\n\t\t\t\t  message.name.push(\"名前の入力は必須です\")\n\t\t\t  }\n\t\t\t  break\n\t\t  case \"email\":\n\t\t  \tdata.email = val\n\t\t\t  message.email = []\n\n\t\t\t  //呪文\n\t\t\t  var regexp = /^[A-Za-z0-9]{1}[A-Za-z0-9_.-]*@{1}[A-Za-z0-9_.-]{1,}\\.[A-Za-z0-9]{1,}$/;\n\n\t\t\t  if(val.length === 0) {\n\t\t\t  \tmessage.email.push(\"メールアドレスの入力は必須です\")\n\t\t\t  }\n\t\t\t  if(!regexp.test(val)) {\n\t\t\t\t\tmessage.email.push(\"正しいメールアドレスを入力してください\")\n\t\t\t  }\n\t\t\t  break\n\t\t  case \"password\":\n\n\t\t  \tdata.password = val\n\t\t\t  message.password = []\n\n\t\t\t  if(val.length === 0) {\n\t\t\t\t  message.password.push(\"パスワードの入力は必須です\")\n\t\t\t  }\n\n\t\t\t  if(val.length > 6) {\n\t\t\t  \tmessage.password.push(\"パスワードは6文字以上にしてください\")\n\t\t\t  }\n\n\t\t\t  if (!val.match(/[a-z]/) || !val.match(/[A-Z]/)) {\n\t\t\t  \tmessage.password.push(\"大文字と小文字のアルファベット一文字以上づつ含んでください\")\n\t\t\t  }\n\t\t\t  if(!val === data.password_confirmation) {\n\t\t\t\t  message.password_confirmation.push(\"１つ目と同じパスワードを入力してください\")\n\t\t\t  }\n\t\t\t  break\n\t\t\tcase \"password_confirmation\":\n\t\t\t\t\n\t\t\t\tdata.password_confirmation = val\n\t\t\t\tmessage.password_confirmation = []\n\t\t\t\t\n\t\t\t\tif(val !== data.password) {\n\t\t\t\t\tmessage.password_confirmation.push(\"１つ目と同じパスワードを入力してください\")\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t  \n\t\t\tcase \"gender\":\n\t\t\t\tdata.gender = val\n\t\t\t\tbreak\n\t\t  \n\t\t  case \"age\":\n\t\t  \tdata.age = val\n\t\t\t  console.log(val)\n\t\t\t  message.age = []\n\t\t\t  if(!val) {\n\t\t\t  \tmessage.age.push(\"年齢を選択してください\")\n\t\t\t  }\n\t\t\t  break\n\t\t\t  \n\t\t\tcase \"introduction\":\n\t\t\t\tdata.introduction = val\n\t\t\t\tmessage.introduction = []\n\t\t\t\t\n\t\t\t\tif(val.length >= 100) {\n\t\t\t\t\tmessage.introduction.push(\"自己紹介は100文字以内で入力してください\")\n\t\t\t\t}\n\t\t\t  break\n\t\t  \n\t\t  default:\n\t\t\t  break\n\t\t  \n\t  }\n\t  \n\t  this.setState({data: data, message: message})\n  }\n\n\tsendData() {\n  \talert(`${this.state.data.name}さんのメールアドレスは${this.state.data.email}で性別は${this.state.data.gender}、年齢は${this.state.data.age}、自己紹介は${this.state.data.introduction}`)\n    this.setState({\n\t    data: {name: '', email: '', password: '', password_confirmation: '', gender: '男', age: '', introduction: ''},\n\t    message: {name: [\"名前の入力は必須です\"], email: [\"メールアドレスの入力は必須です\"],\n\t\t    password: [\"passwordの入力は必須です\"], password_confirmation: [\"１つ目と同じpasswordを入力してください\"], age: [\"年齢を選択してください\"], introduction: []},\n    })\n\t}\n\n\n\trender() {\n  \t\n\n  \tlet name = {data: this.state.data.name, message: this.state.message.name, checkValue: this.checkValue}\n  \tlet email = {data: this.state.data.email, message: this.state.message.email, checkValue: this.checkValue}\n  \tlet password = {data: this.state.data.password, message: this.state.message.password, checkValue: this.checkValue}\n  \tlet password_confirmation = {data: this.state.data.password_confirmation, message: this.state.message.password_confirmation, checkValue: this.checkValue}\n    let gender = {data: this.state.data.gender, checkValue: this.checkValue}\n    let age = {data: this.state.data.age, message: this.state.message.age, checkValue: this.checkValue}\n    let introduction = {data: this.state.data.introduction, message: this.state.message.introduction, checkValue: this.checkValue}\n\t\t\n  \n\t\treturn(\n\t\t\t<ul className={\"register-ul\"}>\n\t\t\t\t<NameInput  {...name}/>\n\t\t\t\t<EmailInput {...email} />\n\t\t\t\t<PasswordInput {...password} />\n\t\t\t\t<PasswordConfirmationInput {...password_confirmation} />\n\t\t\t\t<GenderInput {...gender} />\n\t\t\t\t<AgeInput {...age}/>\n\t\t\t\t<IntroductionInput {...introduction} />\n\t\t\t\t<SendButton sendData={this.sendData} message={this.state.message}/>\n\t\t\t</ul>\n\t\t)\n\t}\n}\n\nclass NameInput extends Component {\n\t\trender(){\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<InputLabel>名前</InputLabel>\n\t\t\t\t\t{this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t\t<TextField type={\"text\"} name={\"name\"} onChange={this.props.checkValue} value={this.props.data}></TextField>\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n}\nNameInput.propTypes= {\n\tcheckValue: PropTypes.func,\n  data: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\nclass EmailInput extends Component {\n  \trender() {\n  \t\treturn (\n  \t\t\t<li>\n\t\t\t\t  <InputLabel>メールアドレス</InputLabel>\n\t\t\t\t  {this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t  <TextField type={\"text\"} name={\"email\"} onChange={this.props.checkValue} value={this.props.data} />\n\t\t\t  </li>\n\t\t  )\n\t  }\n}\n\nEmailInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\nclass PasswordInput extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<InputLabel>パスワード</InputLabel>\n\t\t\t\t{this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t<TextField type={\"text\"} name={\"password\"} onChange={this.props.checkValue} value={this.props.data} />\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nPasswordInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\nclass PasswordConfirmationInput extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<InputLabel>パスワードの確認</InputLabel>\n\t\t\t\t{this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t<TextField type={\"text\"} name={\"password_confirmation\"} onChange={this.props.checkValue} value={this.props.data} />\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nPasswordConfirmationInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\nclass GenderInput extends Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<RadioGroup>\n\t\t\t\t\t\t<InputLabel>性別</InputLabel>\n\t\t\t\t\t\t<InputLabel><Radio name={\"gender\"} onChange={this.props.checkValue} checked={this.props.data === \"男\"} value={\"男\"} />男</InputLabel>\n\t\t\t\t\t\t<InputLabel><Radio name={\"gender\"} onChange={this.props.checkValue} checked={this.props.data === \"女\"} value={\"女\"} />女</InputLabel>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n}\n\nGenderInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string\n}\n\nclass IntroductionInput extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<InputLabel>自己紹介</InputLabel>\n\t\t\t\t{this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t<FilledInput multiline={true} name={\"introduction\"} onChange={this.props.checkValue} value={this.props.data}></FilledInput>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\n\n\nIntroductionInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\n\nclass AgeInput extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<InputLabel>年齢</InputLabel>\n\t\t\t\t{this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t<TextField type={\"number\"} name={\"age\"} onChange={this.props.checkValue} value={this.props.data} />\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nAgeInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\n\nclass SendButton extends Component {\n\tcheckError = (mes) => {\n\t\tfor (var key in mes) {\n\t\t  if (mes[key].length !== 0) {\n\t\t  \treturn true\n\t\t  }\n\t\t}\n\t\treturn false\n\t}\n\t\n\t\n\trender() {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<Button raised={\"true\"} color={\"secondary\"} onClick={this.props.sendData} disabled={this.checkError(this.props.message)} >送信</Button>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nSendButton.propType = {\n\tsendData: PropTypes.func,\n\tmessage: PropTypes.object.array\n}\n\n\n\n\nexport default RegisterInput;","import React, {Component} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from '@material-ui/core/Typography'\n\nclass AppHeader extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<AppBar position={\"static\"} color={\"secondary\"}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant={\"title\"} align={\"center\"} color={\"inherit\"}>Heart Up</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t)\n\t}\n}\n\nexport default AppHeader;","import React, { Component } from 'react';\nimport RegisterInput from './RegisterForm.js'\nimport AppHeader from './AppHeader.js'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  render() {\n    return (\n      <div className={\"App\"}>\n        <AppHeader />\n        <RegisterInput />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n\t<App />\n\t,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}