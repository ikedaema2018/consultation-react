{"version":3,"sources":["components/RegisterForm.js","components/App.js","serviceWorker.js","index.js"],"names":["RegisterInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","name","email","password","password_confirmation","gender","introduction","message","checkValue","bind","assertThisInitialized","sendData","event","type","target","val","value","_this$state","length","push","test","match","setState","alert","concat","react_default","a","createElement","RegisterForm_NameInput","RegisterForm_EmailInput","RegisterForm_PasswordInput","RegisterForm_PasswordConfirmationInput","RegisterForm_GenderInput","RegisterForm_IntroductionInput","RegisterForm_SendButton","Component","NameInput","className","onChange","EmailInput","PasswordInput","PasswordConfirmationInput","GenderInput","checked","IntroductionInput","defaultValue","SendButton","checkError","mes","key","onClick","disabled","propType","PropTypes","func","object","array","App","RegisterForm","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b17f689d.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/register-form.css'\n\nclass RegisterInput extends Component {\n\n  constructor(props) {\n  \tsuper(props)\n\n\t  this.state = {\n  \t\tdata: {name: '', email: '', password: '', password_confirmation: '', gender: '男', introduction: ''},\n      message: {name: [\"名前の入力は必須です\"], email: [\"メールアドレスの入力は必須です\"],\n\t\t\tpassword: [\"passwordの入力は必須です\"], password_confirmation: [\"１つ目と同じpasswordを入力してください\"], introduction: []},\n\t  }\n\t\tthis.checkValue = this.checkValue.bind(this)\n\t  this.sendData = this.sendData.bind(this)\n  }\n\n\n  checkValue(event) {\n  \tlet type = event.target.name\n\t  let val = event.target.value\n\n\t  var {data, message} = this.state\n\n\t  switch (type) {\n\t\t  case \"name\":\n\t\t  \tdata.name = val\n\t\t\t  message.name = []\n\n\t\t\t  if(val.length > 10) {\n\t\t\t\t  message.name.push(\"名前は10文字以内で入力してください\")\n\t\t\t  }\n\t\t\t  if(val.length === 0) {\n\t\t\t\t  message.name.push(\"名前の入力は必須です\")\n\t\t\t  }\n\t\t\t  break\n\t\t  case \"email\":\n\t\t  \tdata.email = val\n\t\t\t  message.email = []\n\n\t\t\t  //呪文\n\t\t\t  var regexp = /^[A-Za-z0-9]{1}[A-Za-z0-9_.-]*@{1}[A-Za-z0-9_.-]{1,}\\.[A-Za-z0-9]{1,}$/;\n\n\t\t\t  if(val.length === 0) {\n\t\t\t  \tmessage.email.push(\"メールアドレスの入力は必須です\")\n\t\t\t  }\n\t\t\t  if(!regexp.test(val)) {\n\t\t\t\t\tmessage.email.push(\"正しいメールアドレスを入力してください\")\n\t\t\t  }\n\t\t\t  break\n\t\t  case \"password\":\n\n\t\t  \tdata.password = val\n\t\t\t  message.password = []\n\n\t\t\t  if(val.length === 0) {\n\t\t\t\t  message.password.push(\"パスワードの入力は必須です\")\n\t\t\t  }\n\n\t\t\t  if(val.length > 6) {\n\t\t\t  \tmessage.password.push(\"パスワードは6文字以上にしてください\")\n\t\t\t  }\n\n\t\t\t  if (!val.match(/[a-z]/) || !val.match(/[A-Z]/)) {\n\t\t\t  \tmessage.password.push(\"大文字と小文字のアルファベット一文字以上づつ含んでください\")\n\t\t\t  }\n\t\t\t  if(!val === data.password_confirmation) {\n\t\t\t\t  message.password_confirmation.push(\"１つ目と同じパスワードを入力してください\")\n\t\t\t  }\n\t\t\t  break\n\t\t\tcase \"password_confirmation\":\n\t\t\t\t\n\t\t\t\tdata.password_confirmation = val\n\t\t\t\tmessage.password_confirmation = []\n\t\t\t\t\n\t\t\t\tif(val !== data.password) {\n\t\t\t\t\tmessage.password_confirmation.push(\"１つ目と同じパスワードを入力してください\")\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t  \n\t\t\tcase \"gender\":\n\t\t\t\tdata.gender = val\n\t\t\t\tbreak\n\t\t\tcase \"introduction\":\n\t\t\t\tdata.introduction = val\n\t\t\t\tmessage.introduction = []\n\t\t\t\t\n\t\t\t\tif(val.length >= 100) {\n\t\t\t\t\tmessage.introduction.push(\"自己紹介は100文字以内で入力してください\")\n\t\t\t\t}\n\t\t\t  break\n\t\t  \n\t\t  default:\n\t\t\t  break\n\t\t  \n\t  }\n\t  \n\t  this.setState({data: data, message: message})\n  }\n\n\tsendData() {\n  \talert(`${this.state.data.name}さんのメールアドレスは${this.state.data.email}で性別は${this.state.data.gender}、自己紹介は${this.state.data.introduction}`)\n    this.setState({\n\t    data: {name: '', email: '', password: '', password_confirmation: '', gender: '男', introduction: ''},\n\t    message: {name: [\"名前の入力は必須です\"], email: [\"メールアドレスの入力は必須です\"],\n\t\t    password: [\"passwordの入力は必須です\"], password_confirmation: [\"１つ目と同じpasswordを入力してください\"], introduction: []},\n    })\n\t}\n\n\n\trender() {\n  \t\n\n  \tlet name = {data: this.state.data.name, message: this.state.message.name, checkValue: this.checkValue}\n  \tlet email = {data: this.state.data.email, message: this.state.message.email, checkValue: this.checkValue}\n  \tlet password = {data: this.state.data.password, message: this.state.message.password, checkValue: this.checkValue}\n  \tlet password_confirmation = {data: this.state.data.password_confirmation, message: this.state.message.password_confirmation, checkValue: this.checkValue}\n    let gender = {data: this.state.data.gender, checkValue: this.checkValue}\n    let introduction = {data: this.state.data.introduction, message: this.state.message.introduction, checkValue: this.checkValue}\n\t\t\n  \n\t\treturn(\n\t\t\t<ul>\n\t\t\t\t<NameInput  {...name}/>\n\t\t\t\t<EmailInput {...email} />\n\t\t\t\t<PasswordInput {...password} />\n\t\t\t\t<PasswordConfirmationInput {...password_confirmation} />\n\t\t\t\t<GenderInput {...gender} />\n\t\t\t\t<IntroductionInput {...introduction} />\n\t\t\t\t<SendButton sendData={this.sendData} message={this.state.message}/>\n\t\t\t</ul>\n\t\t)\n\t}\n}\n\nclass NameInput extends Component {\n\t\trender(){\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<label>名前</label>\n\t\t\t\t\t{this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t\t<input type={\"text\"} name={\"name\"} onChange={this.props.checkValue} value={this.props.data}></input>\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n}\nNameInput.propTypes= {\n\tcheckValue: PropTypes.func,\n  data: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\nclass EmailInput extends Component {\n  \trender() {\n  \t\treturn (\n  \t\t\t<li>\n\t\t\t\t  <label>メールアドレス</label>\n\t\t\t\t  {this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t  <input type={\"text\"} name={\"email\"} onChange={this.props.checkValue} value={this.props.data} />\n\t\t\t  </li>\n\t\t  )\n\t  }\n}\n\nEmailInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\nclass PasswordInput extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<label>パスワード</label>\n\t\t\t\t{this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t<input type={\"text\"} name={\"password\"} onChange={this.props.checkValue} value={this.props.data} />\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nPasswordInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\nclass PasswordConfirmationInput extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<label>パスワードの確認</label>\n\t\t\t\t{this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t<input type={\"text\"} name={\"password_confirmation\"} onChange={this.props.checkValue} value={this.props.data} />\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nPasswordConfirmationInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\nclass GenderInput extends Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<label>性別</label>\n\t\t\t\t\t<label>男<input type={\"radio\"} name={\"gender\"} onChange={this.props.checkValue} checked={this.props.data === \"男\"} value={\"男\"} /></label>\n\t\t\t\t\t<label>女<input type={\"radio\"} name={\"gender\"} onChange={this.props.checkValue} checked={this.props.data === \"女\"} value={\"女\"} /></label>\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n}\n\nGenderInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string\n}\n\nclass IntroductionInput extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<label>自己紹介</label>\n\t\t\t\t{this.props.message !== [] ? <p className={\"error-message\"}>{this.props.message[0]}</p> : <p></p>}\n\t\t\t\t<textarea name={\"introduction\"} onChange={this.props.checkValue} defaultValue={this.props.data}></textarea>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nIntroductionInput.propTypes = {\n\tcheckValue: PropTypes.func,\n\tdata: PropTypes.string,\n\tmessage: PropTypes.array\n}\n\nclass SendButton extends Component {\n\tcheckError = (mes) => {\n\t\tfor (var key in mes) {\n\t\t  if (mes[key].length !== 0) {\n\t\t  \treturn true\n\t\t  }\n\t\t}\n\t\treturn false\n\t}\n\t\n\t\n\trender() {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<button onClick={this.props.sendData} disabled={this.checkError(this.props.message)} >送信</button>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nSendButton.propType = {\n\tsendData: PropTypes.func,\n\tmessage: PropTypes.object.array\n}\n\n\n\n\nexport default RegisterInput;","import React, { Component } from 'react';\nimport RegisterInput from './RegisterForm.js'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  render() {\n    return (\n      <RegisterInput />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}